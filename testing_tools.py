
def test_matrices( selector ):
    Test_Matrix_00 = [[0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0]]

    Test_Matrix_01 = [[5, 0, 2, 0, 9, 0, 7, 8, 6],
                      [9, 0, 3, 0, 6, 0, 5, 0, 0],
                      [6, 7, 1, 8, 0, 0, 3, 2, 9],
                      [0, 0, 0, 7, 5, 1, 9, 0, 0],
                      [8, 9, 0, 4, 0, 2, 0, 6, 7],
                      [0, 0, 4, 6, 8, 9, 0, 0, 0],
                      [4, 2, 7, 0, 0, 8, 6, 9, 3],
                      [0, 0, 9, 0, 7, 0, 8, 0, 2],
                      [3, 5, 8, 0, 2, 0, 4, 0, 1]]

    Test_Matrix_02 = [[2, 0, 0, 3, 0, 0, 0, 0, 9],
                      [0, 1, 0, 0, 0, 0, 0, 4, 0],
                      [0, 0, 6, 0, 0, 7, 8, 0, 0],
                      [3, 0, 0, 9, 0, 0, 7, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 2, 0],
                      [0, 5, 0, 0, 8, 0, 0, 0, 1],
                      [8, 0, 0, 4, 0, 0, 0, 5, 0],
                      [0, 0, 7, 0, 0, 0, 6, 0, 0],
                      [0, 0, 0, 0, 2, 0, 0, 0, 3]]

    Test_Matrix_03 = [[0, 8, 0, 0, 0, 1, 0, 0, 5],
                      [0, 0, 7, 0, 0, 0, 0, 9, 0],
                      [6, 0, 0, 0, 0, 0, 3, 0, 0],
                      [0, 1, 0, 0, 0, 2, 0, 0, 8],
                      [0, 0, 0, 0, 7, 0, 0, 0, 0],
                      [0, 0, 3, 5, 0, 0, 6, 0, 0],
                      [0, 9, 0, 0, 6, 0, 0, 0, 1],
                      [5, 0, 0, 0, 0, 3, 0, 2, 0],
                      [0, 0, 4, 8, 0, 0, 7, 0, 0]]

    # Easy 11 [4][0-2] # + 1 - 3
    Test_Matrix_10 = [[0, 0, 0, 7, 0, 0, 0, 0, 0],
                      [1, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 4, 3, 0, 2, 0, 0],
                      [4, 2, 3, 0, 0, 0, 0, 0, 6],
                      [0, 0, 0, 5, 0, 9, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 4, 1, 8],
                      [0, 0, 0, 0, 8, 1, 0, 0, 0],
                      [0, 0, 2, 0, 0, 0, 0, 5, 0],
                      [0, 4, 0, 0, 0, 0, 3, 0, 0]]

    # 17 element with solution
    Test_Matrix_11 = [[0, 0, 0, 7, 0, 0, 0, 0, 0],
                      [1, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 4, 3, 0, 2, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 6],
                      [0, 0, 0, 5, 0, 9, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 4, 1, 8],
                      [0, 0, 0, 0, 8, 1, 0, 0, 0],
                      [0, 0, 2, 0, 0, 0, 0, 5, 0],
                      [0, 4, 0, 0, 0, 0, 3, 0, 0]]

    # 17 element without solution HARD TO SOLVE
    Test_Matrix_12 = [[0, 0, 0, 8, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 3, 0], [5, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 7, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 0, 0, 3, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0, 7, 5], [0, 0, 3, 4, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 6, 0, 0]]

    # Easy 12 [5][2] [NO SOLUTION]
    Test_Matrix_13 = [[0, 0, 0, 8, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 4, 3, 0], [5, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 7, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 1, 0, 0], [0, 2, 0, 0, 3, 0, 0, 0, 0], [6, 0, 0, 0, 0, 0, 0, 7, 5], [0, 0, 3, 4, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 6, 0, 0]]

    Test_Matrix_14 = [[0, 2, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 6, 0, 0, 0, 0, 3], [0, 7, 4, 0, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 2], [0, 8, 0, 0, 4, 0, 0, 1, 0], [6, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 7, 8, 0], [5, 0, 0, 0, 0, 9, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 0]]

    Test_Matrix_15 = [[1, 2, 3, 4, 5, 6, 7, 8, 0], [0, 0, 0, 6, 0, 0, 0, 0, 3], [0, 7, 4, 0, 8, 0, 0, 0, 0], [0, 0, 0, 0, 0, 3, 0, 0, 2], [0, 8, 0, 0, 4, 0, 0, 1, 0], [6, 0, 0, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0, 7, 8, 0], [5, 0, 0, 0, 0, 9, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 4, 0]]

    Test_Matrix_16 = [[0, 0, 0, 0, 0, 0, 0, 3, 1], [6, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 7, 0, 0, 0, 0], [0, 5, 0, 1, 0, 8, 0, 0, 0], [2, 0, 0, 0, 0, 0, 6, 0, 0], [0, 0, 0, 3, 0, 0, 0, 7, 0], [0, 0, 0, 0, 4, 0, 2, 0, 0], [0, 3, 0, 5, 0, 0, 0, 0, 0], [7, 0, 0, 0, 0, 0, 0, 0, 0]]

    Test_Matrix_16_S = [[9, 2, 4, 6, 8, 5, 7, 3, 1],
                        [6, 7, 1, 4, 2, 3, 8, 5, 9],
                        [3, 8, 5, 9, 7, 1, 4, 2, 6],
                        [4, 5, 7, 1, 6, 8, 3, 9, 2],
                        [2, 9, 3, 7, 5, 4, 6, 1, 8],
                        [1, 6, 8, 3, 9, 2, 5, 7, 4],
                        [5, 1, 9, 8, 4, 7, 2, 6, 3],
                        [8, 3, 2, 5, 1, 6, 9, 4, 7],
                        [7, 4, 6, 2, 3, 9, 1, 8, 5]]

    # todo get rid of this by placing all of the above matrices in a list
    if selector == 00:
        selected = Test_Matrix_00
    if selector == 1:
        selected = Test_Matrix_01
    if selector == 2:
        selected = Test_Matrix_02
    if selector == 3:
        selected = Test_Matrix_03
    if selector == 10:
        selected = Test_Matrix_10
    if selector == 11:
        selected = Test_Matrix_11
    if selector == 12:
        selected = Test_Matrix_12
    if selector == 13:
        selected = Test_Matrix_13
    if selector == 14:
        selected = Test_Matrix_14
    if selector == 15:
        selected = Test_Matrix_15
    if selector == 16:
        selected = Test_Matrix_16
    if selector == 17:
        selected = Test_Matrix_16_S


    return selected


def pretty_print( matrix ):
    SIZE = len(matrix[0])

    for row in range(SIZE):
        if row % 3 == 0:
            print('\n', "-------------------------------------")  # todo hardcoded
        print()
        for column in range(SIZE):
            if column % 3 == 0:
                print("|", ""),
            if matrix[row][column] != 0:
                print(matrix[row][column], "")
            else:
                print (" ", "")
        print("|", "")
    print('\n', "-------------------------------------")  # todo hardcoded
    return ""


def verified_solution():
    return