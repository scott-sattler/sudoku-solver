template = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
]


###############################################################################
# boards currently in use
###############################################################################

def empty_board():
    board = [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
    ]
    return [row[:] for row in board]


def easy_example():
    board = [
        [5, 0, 2, 0, 9, 0, 7, 8, 6],
        [9, 0, 3, 0, 6, 0, 5, 0, 0],
        [6, 7, 1, 8, 0, 0, 3, 2, 9],
        [0, 0, 0, 7, 5, 1, 9, 0, 0],
        [8, 9, 0, 4, 0, 2, 0, 6, 7],
        [0, 0, 4, 6, 8, 9, 0, 0, 0],
        [4, 2, 7, 0, 0, 8, 6, 9, 3],
        [0, 0, 9, 0, 7, 0, 8, 0, 2],
        [3, 5, 8, 0, 2, 0, 4, 0, 1]
    ]
    return [row[:] for row in board]


def hard_example():
    board = [
        [0, 0, 0, 7, 0, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 4, 3, 0, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 6],
        [0, 0, 0, 5, 0, 9, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 4, 1, 8],
        [0, 0, 0, 0, 8, 1, 0, 0, 0],
        [0, 0, 2, 0, 0, 0, 0, 5, 0],
        [0, 4, 0, 0, 0, 0, 3, 0, 0]
    ]
    return [row[:] for row in board]

###############################################################################
# misc boards
###############################################################################


def steering_wheel_classic():
    board = [
        [0, 0, 0, 1, 0, 2, 0, 0, 0],
        [0, 6, 0, 0, 0, 0, 0, 7, 0],
        [0, 0, 8, 0, 0, 0, 9, 0, 0],
        [4, 0, 0, 0, 0, 0, 0, 0, 3],
        [0, 5, 0, 0, 0, 7, 0, 0, 0],
        [2, 0, 0, 0, 8, 0, 0, 0, 1],
        [0, 0, 9, 0, 0, 0, 8, 0, 5],
        [0, 7, 0, 0, 0, 0, 0, 6, 0],
        [0, 0, 0, 3, 0, 4, 0, 0, 0],
    ]
    return [row[:] for row in board]


def clue_24_automorphic_with_translational_symmetry():
    # 24-clue automorphic Sudoku with translational symmetry
    board = [
        [1, 0, 0, 2, 0, 0, 3, 0, 0],
        [2, 0, 0, 3, 0, 0, 4, 0, 0],
        [3, 0, 0, 4, 0, 0, 5, 0, 0],
        [4, 0, 0, 5, 0, 0, 6, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 3, 0, 0, 4, 0, 0, 5],
        [0, 0, 4, 0, 0, 5, 0, 0, 6],
        [0, 0, 5, 0, 0, 6, 0, 0, 7],
        [0, 0, 6, 0, 0, 7, 0, 0, 8],
    ]
    return [row[:] for row in board]
